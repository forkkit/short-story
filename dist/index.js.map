{"version":3,"file":"index.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["export const throttle = (func, limit) => {\n  let inThrottle;\n  return function() {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { throttle } from \"./utils\";\nimport styled, { css } from \"react-emotion\";\n\nconst fonts = {\n  heading: \"300 2em/2.2em Avenir\",\n  label: \"500 .9em/.9em Avenir\",\n  code: \"500 1em/1.2em Menlo\",\n  body: \"500 .9em/1.15em Avenir\",\n  caption: \"400 .8em/.8em Avenir\"\n};\n\nconst colors = {\n  border: \"#e5e9f2\",\n  text: \"#514f4f\",\n  outline: \"#d3dce6\",\n  fill: \"#928f8f\",\n  field: \"#f5f7ff\",\n  fieldBorder: \"#e5e9f2\",\n  background: \"none\"\n};\n\n// styled components\n\nconst Heading = styled(\"h2\")`\n  font: ${fonts.heading};\n  color: ${colors.text};\n`;\n\nconst CSSCapsule = styled(\"div\")`\n  all: initial;\n`;\n\nconst ComponentContainer = styled(\"div\")`\n  display: grid;\n  grid-gap: 1em;\n  flex-direction: column;\n  border: 1px solid ${colors.border};\n  border-bottom: none;\n  border-radius: 0.25em 0.25em 0 0;\n  background-color: ${colors.background};\n  width: auto;\n  align-items: center;\n  justify-content: center;\n  padding: 1.25em;\n`;\n\nconst MeasureLabel = styled(\"div\")`\n  font: ${fonts.caption};\n  color: ${colors.label};\n  padding-top: 1em;\n  border-top: 1px solid ${colors.border};\n  text-align: center;\n`;\n\nconst KnobsPanel = styled(\"div\")`\n  display: grid;\n  font: ${fonts.label};\n  border: 1px solid ${colors.border};\n  border-top: none;\n  border-radius: 0 0 0.25em 0.25em;\n  overflow: hidden;\n  margin-bottom: 2em;\n`;\n\nconst KnobContainer = styled(\"div\")`\n  border-top: 1px solid ${colors.border};\n  grid-row: span 1;\n  padding: 1.75em 0 1.75em 0;\n`;\n\nconst KnobLabelRow = styled(\"div\")`\n  width: 320px;\n  margin: 0 auto 1em auto;\n  display: flex;\n  align-content: center;\n  justify-content: space-between;\n`;\n\nconst KnobLabel = styled(\"span\")`\n  letter-spacing: 0.18em;\n  font: ${fonts.label};\n  color: ${colors.text};\n  text-transform: uppercase;\n`;\n\nconst KnobVariableName = styled(\"span\")`\n  font: ${fonts.code};\n  color: ${colors.text};\n`;\n\nconst KnobInput = styled(\"div\")`\n  width: 100%;\n`;\n\nconst ContainerStyle = css`\n\twidth: 100%;\n\tletter-spacing: .08em;\n\tbox-sizing: border-box;\n  padding: 1em 1.25em;\n  font: ${fonts.body};x;\n  color: ${colors.body};\n  background-color: ${colors.field};\n  border: 1px solid ${colors.fieldBorder};\n  border-radius: 0.25em;\n`;\n\nconst Input = props => (\n  <input key=\"Stsy-input\" className={ContainerStyle} {...props} />\n);\n\n// prior art\n\nconst theme = {\n  white: \"#fff\",\n  background: \"#f6f6f6\",\n  gray: \"#eee\",\n  black: \"#000\",\n  labelColor: \"#555\",\n  inputColor: \"#777\",\n  outerBorder: \"1px solid #ccc\",\n  border: \"1px solid #eee\",\n  rowPadding: \"16px\"\n};\n\nclass ShortStory extends React.Component {\n  static propTypes = {\n    knobs: PropTypes.object,\n    name: PropTypes.string,\n    children: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.measure = React.createRef();\n\n    this.state = {\n      width: 0,\n      activeTab: 0\n    };\n\n    Object.keys(this.props.knobs).map(key => {\n      const knob = this.props.knobs[key];\n      knob.name = key;\n      this.state = { ...this.state, [key]: knob.default };\n    });\n  }\n\n  // Create knobs\n  createKnob = knob => {\n    if (knob.hidden !== undefined) {\n      if (knob.hidden(this.state)) {\n        return;\n      }\n    }\n\n    const input = this.createKnobInput(knob);\n\n    return (\n      <KnobContainer>\n        <div style={{ width: \"320px\", margin: \"0 auto 1em auto\" }}>\n          <KnobLabelRow key={\"Label_Box_\" + knob.name}>\n            <KnobLabel>{knob.label}</KnobLabel>\n            <KnobVariableName>{knob.variableName}</KnobVariableName>\n          </KnobLabelRow>\n          <KnobInput>{input}</KnobInput>\n        </div>\n      </KnobContainer>\n    );\n  };\n\n  // Create the correct input for the knob type\n  createKnobInput = knob => {\n    let i = 0;\n\n    // let ref = React.createRef();\n    const key = knob.name;\n\n    const handleChange = throttle(ev => {\n      this.setState({ [knob.name]: ev.target.value });\n    }, 250);\n\n    const currentValue = this.state[knob.name];\n\n    switch (knob.type) {\n      // TEXT\n      case \"text\":\n        return (\n          <Input\n            key={key}\n            onChange={handleChange}\n            defaultValue={currentValue}\n          />\n        );\n      // TEXTAREA\n      case \"textarea\":\n        return (\n          <textarea\n            key={key}\n            onChange={handleChange}\n            defaultValue={currentValue}\n            className={ContainerStyle}\n          />\n        );\n      // DATE\n      case \"date\":\n        return (\n          <Input\n            key={key}\n            type=\"date\"\n            min={knob.min}\n            max={knob.max}\n            onChange={handleChange}\n            value={currentValue}\n            style={{\n              border: \"1px solid #aaa\",\n              fontFamily: \"sans-serif\",\n              fontSize: \".9em\",\n              padding: \"8px\"\n            }}\n          />\n        );\n      // NUMBER\n      case \"number\":\n        return [\n          <div\n            key={key + \"_slider_currentValue\"}\n            style={{\n              width: \"calc(100% - 16px)\",\n              textAlign: \"center\"\n            }}\n          >\n            <small key={key + \"_slider_max\"}>{currentValue}</small>\n          </div>,\n          <Input\n            key={key}\n            type=\"range\"\n            min={knob.min}\n            max={knob.max}\n            onChange={handleChange}\n            defaultValue={currentValue}\n            style={{\n              width: \"calc(100% - 16px)\"\n            }}\n          />,\n          <div\n            key={key + \"_slider_values\"}\n            style={{\n              display: \"flex\",\n              width: \"calc(100% - 16px)\",\n              justifyContent: \"space-between\",\n              fontFamily: \"sans-serif\",\n              fontSize: \".9em\"\n            }}\n          >\n            <span key={key + \"_slider_min\"}>{knob.min}</span>\n            <span key={key + \"_slider_max\"}>{knob.max}</span>\n          </div>\n        ];\n      // ENUMERATED VALUE\n      case \"enum\":\n        return (\n          <div\n            className={ContainerStyle}\n            style={{\n              position: \"relative\",\n              padding: \"0\",\n              height: \"3em\"\n            }}\n          >\n            <div\n              className={css`\n                padding: 1em 1.25em;\n              `}\n            >\n              {knob.labels[knob.options.indexOf(currentValue)]}\n            </div>\n            <div\n              className={css`\n                position: absolute;\n                top: calc(50% - 2px);\n                right: 16px;\n                width: 20px;\n                height: 12px;\n                clip-path: polygon(0px 0px, 8px 8px, 16px 0px);\n                background-color: ${colors.text};\n              `}\n            />\n            <select\n              key={key}\n              type=\"select\"\n              onChange={handleChange}\n              defaultValue={currentValue}\n              className={css`\n                position: absolute;\n                top: 0;\n                left: 0;\n                height: 100%;\n                width: 100%;\n                opacity: 0;\n              `}\n            >\n              {knob.options.map((o, index) => (\n                <option key={key + \"_option_\" + index} value={o}>\n                  {knob.labels[index]}\n                </option>\n              ))}\n            </select>\n          </div>\n        );\n      // SEGMENTED ENUMERATED VALUE\n      case \"segment\":\n        i++;\n        return (\n          <div\n            key={key + i + \"_segment\"}\n            style={{\n              width: \"calc(100% - 16px)\"\n            }}\n          >\n            {knob.options.map((o, index) => [\n              <Input\n                key={key + i + \"_SegmentOption_\" + index}\n                type=\"radio\"\n                checked={currentValue === o}\n                mr={2}\n                id={key + i + \"_SegmentOption_\" + index}\n                onChange={ev => {\n                  this.setState({ [knob.name]: o });\n                }}\n                style={{\n                  marginRight: \"8px\"\n                }}\n              />,\n              <label\n                style={{\n                  marginRight: \"16px\"\n                }}\n                key={key + i + \"_SegmentOptionLabel_\" + index}\n                htmlFor={key + i + \"_SegmentOption_\" + index}\n              >\n                {knob.labels[index]}\n              </label>\n            ])}\n          </div>\n        );\n      // BOOLEAN\n      case \"boolean\":\n        return (\n          <Input\n            key={key}\n            type=\"checkbox\"\n            onClick={ev => {\n              this.setState({ [knob.name]: !currentValue });\n            }}\n            defaultChecked={currentValue}\n            style={{}}\n          />\n        );\n      // COLOR\n      case \"color\":\n        return [\n          <Input\n            key={key}\n            type=\"color\"\n            name={knob.name}\n            onChange={handleChange}\n            value={currentValue}\n            style={{\n              padding: 0,\n              margin: 0,\n              borderWidth: 0,\n              height: \"32px\",\n              width: \"56px\",\n              borderColor: \"none\",\n              backgroundColor: \"none\"\n            }}\n          />\n        ];\n      // TIME\n      case \"time\":\n        return [\n          <Input\n            key={key}\n            type=\"time\"\n            min={knob.min}\n            max={knob.max}\n            onChange={handleChange}\n            value={currentValue}\n            style={{\n              border: \"1px solid #aaa\",\n              fontFamily: \"sans-serif\",\n              fontSize: \".9em\",\n              padding: \"8px\"\n            }}\n          />\n        ];\n      // TODO: IMAGE\n      default:\n        return <span>Nothing for that type.</span>;\n    }\n  };\n\n  componentDidMount() {\n    this.updateWidth();\n    window.addEventListener(\"resize\", throttle(this.updateWidth, 100));\n  }\n\n  componentDidUpdate() {\n    this.updateWidth();\n  }\n\n  updateWidth = ev => {\n    if (!this.measure.current) {\n      return;\n    }\n\n    const node = this.measure.current.childNodes[0];\n\n    if (!node || node.offsetWidth === this.state.width) {\n      return;\n    }\n\n    this.setState({ width: node.offsetWidth });\n  };\n\n  render() {\n    let name = this.props.name;\n\n    return [\n      <CSSCapsule key={`stsy_${name}_header`}>\n        <Heading>{name}</Heading>\n      </CSSCapsule>,\n      <div key={`stsy_${name}_component`}>\n        <ComponentContainer>\n          <div ref={this.measure}>{this.props.children(this.state)}</div>\n          <CSSCapsule>\n            <MeasureLabel>\n              {this.state.width}\n              px\n            </MeasureLabel>\n          </CSSCapsule>\n        </ComponentContainer>\n        <CSSCapsule>\n          <KnobsPanel>\n            {Object.values(this.props.knobs).map(v => this.createKnob(v))}\n          </KnobsPanel>\n        </CSSCapsule>\n      </div>\n    ];\n  }\n}\n\nShortStory.defaultProps = {\n  name: \"My Element\",\n  knobs: {}\n};\n\nexport default ShortStory;\n"],"names":["throttle","func","limit","inThrottle","args","arguments","context","apply","fonts","colors","Heading","styled","heading","text","CSSCapsule","ComponentContainer","border","background","MeasureLabel","caption","label","KnobsPanel","KnobContainer","KnobLabelRow","KnobLabel","KnobVariableName","code","KnobInput","ContainerStyle","css","body","field","fieldBorder","Input","props","ShortStory","createKnob","knob","hidden","undefined","state","input","createKnobInput","width","margin","name","variableName","i","key","handleChange","setState","ev","target","value","currentValue","type","min","max","labels","options","indexOf","map","o","index","updateWidth","measure","current","node","childNodes","offsetWidth","React","createRef","keys","knobs","default","addEventListener","children","values","v","Component","propTypes","PropTypes","object","string","isRequired","defaultProps"],"mappings":"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"}