{"version":3,"file":"index.js","sources":["../src/utils.js","../src/index.js"],"sourcesContent":["export const throttle = (func, limit) => {\n  let inThrottle;\n  return function() {\n    const args = arguments;\n    const context = this;\n    if (!inThrottle) {\n      func.apply(context, args);\n      inThrottle = true;\n      setTimeout(() => (inThrottle = false), limit);\n    }\n  };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { throttle } from \"./utils\";\n\nconst theme = {\n  white: \"#fff\",\n  background: \"#f6f6f6\",\n  gray: \"#eee\",\n  black: \"#000\",\n  labelColor: \"#555\",\n  inputColor: \"#777\",\n  outerBorder: \"1px solid #ccc\",\n  border: \"1px solid #eee\",\n  rowPadding: \"16px\"\n};\n\nclass ShortStory extends React.Component {\n  static propTypes = {\n    knobs: PropTypes.object,\n    name: PropTypes.string,\n    children: PropTypes.func.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.measure = React.createRef();\n\n    this.state = {\n      width: 0,\n      activeTab: 0\n    };\n\n    Object.keys(this.props.knobs).map(key => {\n      const knob = this.props.knobs[key];\n      knob.name = key;\n      this.state = { ...this.state, [key]: knob.default };\n    });\n  }\n\n  // Create knobs\n  createKnob = knob => {\n    if (knob.hidden !== undefined) {\n      if (knob.hidden(this.state)) {\n        return;\n      }\n    }\n\n    const input = this.createKnobInput(knob);\n\n    return [\n      <div\n        key={\"Label_Box_\" + knob.name}\n        style={{\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n          gridColumn: 1,\n          padding: theme.rowPadding,\n          borderTop: theme.border,\n          color: theme.labelColor\n        }}\n      >\n        {knob.label}\n      </div>,\n      <div\n        key={\"Knob_Input\" + knob.name}\n        style={{\n          gridColumn: 2,\n          padding: theme.rowPadding,\n          borderTop: theme.border,\n          color: theme.inputColor\n        }}\n      >\n        {input}\n      </div>\n    ];\n  };\n\n  // Create the correct input for the knob type\n  createKnobInput = knob => {\n    let i = 0;\n\n    // let ref = React.createRef();\n    const key = knob.name;\n\n    const handleChange = throttle(ev => {\n      this.setState({ [knob.name]: ev.target.value });\n    }, 250);\n\n    const currentValue = this.state[knob.name];\n\n    switch (knob.type) {\n      // TEXT\n      case \"text\":\n        return (\n          <Input\n            key={key}\n            onChange={handleChange}\n            defaultValue={currentValue}\n            style={{\n              width: \"calc(100% - 16px)\",\n              fontFamily: \"sans-serif\",\n              fontSize: \".9em\",\n              padding: \"8px\",\n              border: \"1px solid #aaa\"\n            }}\n          />\n        );\n      // TEXTAREA\n      case \"textarea\":\n        return (\n          <textarea\n            key={key}\n            onChange={handleChange}\n            defaultValue={currentValue}\n            style={{\n              width: \"calc(100% - 16px)\",\n              border: \"1px solid #aaa\",\n              fontFamily: \"sans-serif\",\n              fontSize: \".9em\",\n              padding: \"8px\"\n            }}\n          />\n        );\n      // DATE\n      case \"date\":\n        return (\n          <Input\n            key={key}\n            type=\"date\"\n            min={knob.min}\n            max={knob.max}\n            onChange={handleChange}\n            value={currentValue}\n            style={{\n              border: \"1px solid #aaa\",\n              fontFamily: \"sans-serif\",\n              fontSize: \".9em\",\n              padding: \"8px\"\n            }}\n          />\n        );\n      // NUMBER\n      case \"number\":\n        return [\n          <div\n            key={key + \"_slider_currentValue\"}\n            style={{\n              width: \"calc(100% - 16px)\",\n              textAlign: \"center\"\n            }}\n          >\n            <small key={key + \"_slider_max\"}>{currentValue}</small>\n          </div>,\n          <Input\n            key={key}\n            type=\"range\"\n            min={knob.min}\n            max={knob.max}\n            onChange={handleChange}\n            defaultValue={currentValue}\n            style={{\n              width: \"calc(100% - 16px)\"\n            }}\n          />,\n          <div\n            key={key + \"_slider_values\"}\n            style={{\n              display: \"flex\",\n              width: \"calc(100% - 16px)\",\n              justifyContent: \"space-between\",\n              fontFamily: \"sans-serif\",\n              fontSize: \".9em\"\n            }}\n          >\n            <span key={key + \"_slider_min\"}>{knob.min}</span>\n            <span key={key + \"_slider_max\"}>{knob.max}</span>\n          </div>\n        ];\n      // ENUMERATED VALUE\n      case \"enum\":\n        return (\n          <select\n            key={key}\n            type=\"select\"\n            onChange={handleChange}\n            defaultValue={currentValue}\n            style={{\n              width: \"calc(100% - 16px)\",\n              fontFamily: \"sans-serif\",\n              fontSize: \".9em\",\n              padding: \"8px\"\n            }}\n          >\n            {knob.options.map((o, index) => (\n              <option key={key + \"_option_\" + index} value={o}>\n                {knob.labels[index]}\n              </option>\n            ))}\n          </select>\n        );\n      // SEGMENTED ENUMERATED VALUE\n      case \"segment\":\n        i++;\n        return (\n          <div\n            key={key + i + \"_segment\"}\n            style={{\n              width: \"calc(100% - 16px)\"\n            }}\n          >\n            {knob.options.map((o, index) => [\n              <Input\n                key={key + i + \"_SegmentOption_\" + index}\n                type=\"radio\"\n                checked={currentValue === o}\n                mr={2}\n                id={key + i + \"_SegmentOption_\" + index}\n                onChange={ev => {\n                  this.setState({ [knob.name]: o });\n                }}\n                style={{\n                  marginRight: \"8px\"\n                }}\n              />,\n              <label\n                style={{\n                  marginRight: \"16px\"\n                }}\n                key={key + i + \"_SegmentOptionLabel_\" + index}\n                htmlFor={key + i + \"_SegmentOption_\" + index}\n              >\n                {knob.labels[index]}\n              </label>\n            ])}\n          </div>\n        );\n      // BOOLEAN\n      case \"boolean\":\n        return (\n          <Input\n            key={key}\n            type=\"checkbox\"\n            onClick={ev => {\n              this.setState({ [knob.name]: !currentValue });\n            }}\n            defaultChecked={currentValue}\n            style={{}}\n          />\n        );\n      // COLOR\n      case \"color\":\n        return [\n          <Input\n            key={key}\n            type=\"color\"\n            name={knob.name}\n            onChange={handleChange}\n            value={currentValue}\n            style={{\n              padding: 0,\n              margin: 0,\n              borderWidth: 0,\n              height: \"32px\",\n              width: \"56px\",\n              borderColor: \"none\",\n              backgroundColor: \"none\"\n            }}\n          />\n        ];\n      // TIME\n      case \"time\":\n        return [\n          <Input\n            key={key}\n            type=\"time\"\n            min={knob.min}\n            max={knob.max}\n            onChange={handleChange}\n            value={currentValue}\n            style={{\n              border: \"1px solid #aaa\",\n              fontFamily: \"sans-serif\",\n              fontSize: \".9em\",\n              padding: \"8px\"\n            }}\n          />\n        ];\n      // TODO: IMAGE\n      default:\n        return <span>Nothing for that type.</span>;\n    }\n  };\n\n  componentDidMount() {\n    this.updateWidth();\n    window.addEventListener(\"resize\", throttle(this.updateWidth, 100));\n  }\n\n  componentDidUpdate() {\n    this.updateWidth();\n  }\n\n  updateWidth = ev => {\n    if (!this.measure.current) {\n      return;\n    }\n\n    const node = this.measure.current.childNodes[0];\n\n    if (!node || node.offsetWidth === this.state.width) {\n      return;\n    }\n\n    this.setState({ width: node.offsetWidth });\n  };\n\n  render() {\n    let name = this.props.name;\n    return [\n      <div\n        key={`stsy_${name}_knobs_heading_container`}\n        style={{\n          all: \"initial\"\n        }}\n      >\n        <h2\n          style={{\n            fontFamily: \"sans-serif\",\n            fontSize: \"1.68em\"\n          }}\n          key={`stsy_${name}_heading`}\n        >\n          {name}\n        </h2>\n      </div>,\n      <div\n        key={`stsy_${name}_component`}\n        style={{\n          display: \"flex\",\n          border: theme.outerBorder,\n          borderBottom: \"none\",\n          borderRadius: \"4px 4px 0 0\",\n          backgroundColor: theme.background,\n          width: \"auto\",\n          justifyContent: \"center\"\n        }}\n      >\n        <div key={`stsy_${name}_padding`} style={{ padding: \"24px 0\" }}>\n          <div\n            key={`stsy_${name}_measure`}\n            style={{\n              borderBottom: `1px solid #bbb`,\n              backgroundColor: \"#eee\"\n            }}\n            ref={this.measure}\n          >\n            {this.props.children(this.state)}\n          </div>{\" \"}\n          <div\n            style={{\n              all: \"initial\"\n            }}\n          >\n            <div\n              key={`stsy_${name}_width`}\n              style={{\n                fontFamily: \"sans-serif\",\n                fontSize: \".8em\",\n                color: \"#777\",\n                paddingTop: \"8px\",\n                textAlign: \"center\"\n              }}\n            >\n              {this.state.width}\n              px\n            </div>\n          </div>\n        </div>\n      </div>,\n      <div key={`stsy_${name}_knobs_container`} style={{ all: \"initial\" }}>\n        <div\n          key={`stsy_${name}_knobs_panel`}\n          style={{\n            fontFamily: \"sans-serif\",\n            fontSize: \".9em\",\n            margin: theme.margin,\n            border: theme.outerBorder,\n            borderRadius: \"0 0 4px 4px\",\n            overflow: \"hidden\",\n            marginBottom: \"40px\"\n          }}\n        >\n          <div\n            key={`stsy_${name}_knobs_container`}\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"25% auto\"\n            }}\n          >\n            {Object.values(this.props.knobs).map(v => this.createKnob(v))}\n          </div>\n        </div>\n      </div>\n    ];\n  }\n}\n\nShortStory.defaultProps = {\n  name: \"My Element\",\n  knobs: {}\n};\n\nexport default ShortStory;\n\nconst Input = props => <input key=\"Stsy-input\" {...props} />;\n"],"names":["throttle","func","limit","inThrottle","args","arguments","context","apply","theme","ShortStory","props","createKnob","knob","hidden","undefined","state","input","createKnobInput","name","rowPadding","border","labelColor","label","inputColor","i","key","handleChange","setState","ev","target","value","currentValue","type","min","max","options","map","o","index","labels","updateWidth","measure","current","node","childNodes","offsetWidth","width","React","createRef","keys","knobs","default","addEventListener","outerBorder","background","padding","children","all","margin","values","v","Component","propTypes","PropTypes","object","string","isRequired","defaultProps","Input"],"mappings":"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"}